<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Smart PDF & Image Combiner</title>
  <script src="pdf-lib.min.js"></script> <!-- Local version -->
  <style>
   :root {
  --primary-color: #4a90e2;
  --secondary-color: #50e3c2;
  --accent-color: #f5a623;
  --bg-color: #f4f7fa;
  --text-color: #333;
  --card-bg: #ffffff;
  --footer-bg: #4a4a4a;
  --footer-text: #f4f7fa;
  --border-radius: 8px;
  --box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  --transition: 0.3s;
  --font-size-base: 18px;
  --font-size-large: 20px;
  --font-size-button: 18px;
}
* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: var(--font-size-base);
  background-color: var(--bg-color);
  color: var(--text-color);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  border: 4px solid var(--primary-color);
}
header {
  background: var(--primary-color);
  color: white;
  padding: 24px;
  text-align: center;
  box-shadow: var(--box-shadow);
}
header h1 {
  font-size: 26px;
  margin: 0 0 10px;
}
header p {
  font-size: 18px;
  margin: 0;
}
main {
  flex: 1;
  padding: 24px;
  max-width: 900px;
  margin: 24px auto;
  background: var(--card-bg);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  font-size: var(--font-size-base);
}
.controls {
  display: flex;
  gap: 12px;
  flex-wrap: wrap;
  margin-bottom: 24px;
}
.controls button {
  background: var(--secondary-color);
  border: none;
  color: white;
  padding: 12px 20px;
  font-size: var(--font-size-button);
  font-weight: 600;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: background var(--transition);
}
.controls button:hover {
  background: var(--accent-color);
}
table {
  width: 100%;
  border-collapse: collapse;
  background: var(--card-bg);
  border-radius: var(--border-radius);
  overflow: hidden;
  box-shadow: var(--box-shadow);
  font-size: var(--font-size-base);
}
th, td {
  padding: 14px;
  text-align: center;
  border-bottom: 1px solid #eee;
}
th {
  background: var(--primary-color);
  color: white;
  font-size: var(--font-size-base);
}
tr:last-child td {
  border-bottom: none;
}
td button {
  background: transparent;
  border: none;
  font-size: 20px;
  cursor: pointer;
  transition: color var(--transition);
}
td button:hover {
  color: var(--accent-color);
}
footer {
  text-align: center;
  padding: 18px;
  background: var(--footer-bg);
  color: var(--footer-text);
  font-size: 16px;
  box-shadow: 0 -1px 4px rgba(0,0,0,0.1);
}

  </style>
</head>
<body>
  <header>
    <h1>Smart PDF & Image Converter + Combiner to one file PDF</h1>
    <p>Select, reorder, and combine your files into one PDF</p>
  </header>
  <main>
    <div class="controls">
      <input type="file" id="fileInput" accept=".pdf,.jpg,.jpeg,.png" multiple hidden>
      <button onclick="document.getElementById('fileInput').click()">Add Files</button>
      <button onclick="combineFiles()">Combine / Convert & Download PDF</button>
      <button onclick="location.reload()">Refresh Page</button>
    </div>
    <table id="fileTable">
      <thead>
        <tr><th>No</th><th>Filename</th><th>Actions</th></tr>
      </thead>
      <tbody></tbody>
    </table>
  </main>
  <footer>¬© HABUMUGISHA Evariste, Rwanda - Rwamagana - Karenge, +250 788 609 869.</footer>

  <script>
    const fileList = [];
    document.getElementById('fileInput').addEventListener('change', e => {
      Array.from(e.target.files).forEach(f => {
        if (/\.(pdf|jpe?g|png)$/i.test(f.name)) fileList.push(f);
        else alert(f.name + ' is not supported.');
      });
      e.target.value = '';
      updateTable();
    });

    function updateTable() {
      const tbody = document.querySelector('#fileTable tbody');
      tbody.innerHTML = '';
      fileList.forEach((f, i) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
          <td>${i+1}</td>
          <td>${f.name}</td>
          <td>
            <button onclick="moveUp(${i})">‚¨ÜÔ∏è</button>
            <button onclick="moveDown(${i})">‚¨áÔ∏è</button>
            <button onclick="removeFile(${i})">üóëÔ∏è</button>
          </td>`;
        tbody.appendChild(tr);
      });
    }
    function moveUp(i) { if(i>0) [fileList[i-1],fileList[i]]=[fileList[i],fileList[i-1]]; updateTable(); }
    function moveDown(i) { if(i<fileList.length-1) [fileList[i+1],fileList[i]]=[fileList[i],fileList[i+1]]; updateTable(); }
    function removeFile(i) { fileList.splice(i,1); updateTable(); }

    async function combineFiles() {
      if (!fileList.length) return alert('Please add at least one file.');
      const { PDFDocument } = PDFLib;
      const mergedPdf = await PDFDocument.create();
      let targetW=595.28,targetH=841.89;
      for (let f of fileList) if(f.type=='application/pdf'){
        const tmp=await PDFDocument.load(await f.arrayBuffer());
        const p=tmp.getPages()[0].getSize();targetW=p.width;targetH=p.height;break;
      }
      for (let f of fileList) {
        const buf=await f.arrayBuffer();
        if (f.type=='application/pdf'){
          const src=await PDFDocument.load(buf);
          (await mergedPdf.copyPages(src,src.getPageIndices())).forEach(p=>mergedPdf.addPage(p));
        } else {
          const img = f.type=='image/png'
            ? await mergedPdf.embedPng(buf)
            : await mergedPdf.embedJpg(buf);
          const { width:iw, height:ih } = img.scale(1);
          const scale=Math.min(targetW/iw,targetH/ih),w=iw*scale,h=ih*scale;
          const x=(targetW-w)/2,y=(targetH-h)/2;
          const page=mergedPdf.addPage([targetW,targetH]);
          page.drawImage(img,{ x,y,width:w,height:h });
        }
      }
      const pdfBytes = await mergedPdf.save();
      const blob = new Blob([pdfBytes],{type:'application/pdf'});
      const now=new Date(),pad=n=>String(n).padStart(2,'0');
      const ts=pad(now.getDate())+pad(now.getMonth()+1)+String(now.getFullYear()).slice(-2)+pad(now.getHours())+pad(now.getMinutes());
      const firstName = fileList[0].name.replace(/\.[^/.]+$/,'');
      const link=document.createElement('a');
      link.href=URL.createObjectURL(blob);
      link.download=`${ts}-${firstName}.pdf`;
      link.click(); URL.revokeObjectURL(link.href);
    }
  </script>
</body>
</html>

